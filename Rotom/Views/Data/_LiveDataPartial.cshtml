@model LiveInstallationModel

@inject IViewLocalizer _localizer

@{
    string uniqueId = "_" + Model.Id;
}

<div class="row justify-content-center pt-4">
    <div class="col col-md-8 border bg-secondary-subtle pb-1 pt-2 rounded-top d-flex">
        <h2>@Model.Name</h2>
        <div class="ms-auto">
            <a class="btn btn-primary" href="@Url.Action(Controllers.DataController.Actions.History, new { installationId = Model.Id })">@_localizer[Resources.Views.Data._LiveDataPartial.ToHistoricalData]</a>
        </div>
    </div>
</div>
<div class="row justify-content-center">
    <div id="@(uniqueId)-delta-header" class="col col-md-8 position-relative text-center bg-success bg-gradient border-start border-end">
        <span id="@(uniqueId)-delta-name" class="position-absolute start-0 top-0 pt-1 ps-2">--</span>
        <h2 class="my-3 fw-bold" id="@(uniqueId)-electricity-delta">-- W</h2>
    </div>
</div>
<div class="row justify-content-center">
    <div class="col col-md-4 position-relative text-center bg-danger border-start rounded-0">
        <span class="position-absolute d-none d-lg-block start-0 top-0 pt-1 ps-2">@_localizer[Resources.Views.Data._LiveDataPartial.Using]</span>
        <h4 class="my-2 fw-bold" id="@(uniqueId)-electricity-usage">-- W</h4>
    </div>
    <div class="col col-md-4 position-relative text-center bg-success border-end">
        <span class="position-absolute d-none d-lg-block start-0 top-0 pt-1 ps-2">@_localizer[Resources.Views.Data._LiveDataPartial.Generating]</span>
        <h4 class="my-2 fw-bold" id="@(uniqueId)-electricity-generated">-- W</h4>
    </div>
</div>
<div class="row justify-content-center">
    <div class="col col-md-8 py-3 bg-body-tertiary border-start border-end border-bottom rounded-bottom position-relative">
        <canvas id="@(uniqueId)_liveChart"></canvas>
        <span id="@(uniqueId)-no-connection" class="position-absolute top-0 end-0 fw-bold p-1 text-warning">@_localizer[Resources.Views.Data._LiveDataPartial.NoConnection]</span>
    </div>
</div>

<script type="text/javascript">
    function loadLiveData@(uniqueId)() {
        const @(uniqueId)_liveChart = new Chart(
            $('#@(uniqueId)_liveChart'),
            getLiveChartConfig()
        );

        const @(uniqueId)_listener = new RabbitMQListener(
            "@Model.RabbitMQHostname",
            "@Model.RabbitMQPort",
            "@Model.RabbitMQUsername",
            "@Model.RabbitMQPassword",
            "@Model.RabbitMQVHost",
            "@Model.RabbitMQExchange",
            "@Model.LocationId"
        );

        let @(uniqueId)_initializing = true;
        const $@(uniqueId)_currentUsage = $('#@(uniqueId)-electricity-usage');
        const $@(uniqueId)_currentGenerated = $('#@(uniqueId)-electricity-generated');
        const $@(uniqueId)_currentDelta = $('#@(uniqueId)-electricity-delta');
        const $@(uniqueId)_headerDelta = $('#@(uniqueId)-delta-header');
        const $@(uniqueId)_deltaName = $('#@(uniqueId)-delta-name');
        let @(uniqueId)_currentlyReceiving = true;
        const $@(uniqueId)_no_conn = $('#@(uniqueId)-no-connection');

        @(uniqueId)_listener.error_callback = function () {
            $@(uniqueId)_no_conn.removeClass('d-none');
        }

        let datapoints = 250;
        @(uniqueId)_listener.data_callback = function (data) {
            $@(uniqueId)_no_conn.addClass('d-none');

            @(uniqueId)_liveChart.data.datasets[0].data.push(data.generated_w - data.usage_w);
            @(uniqueId)_liveChart.data.datasets[0].data = @(uniqueId)_liveChart.data.datasets[0].data.slice(-datapoints);

            @(uniqueId)_liveChart.data.datasets[2].data.push(data.generated_w);
            @(uniqueId)_liveChart.data.datasets[2].data = @(uniqueId)_liveChart.data.datasets[2].data.slice(-datapoints);

            @(uniqueId)_liveChart.data.datasets[1].data.push(data.usage_w * -1);
            @(uniqueId)_liveChart.data.datasets[1].data = @(uniqueId)_liveChart.data.datasets[1].data.slice(-datapoints);

            @(uniqueId)_liveChart.data.labels.push(data.time);
            @(uniqueId)_liveChart.data.labels = @(uniqueId)_liveChart.data.labels.slice(-datapoints);

            @(uniqueId)_liveChart.update('none');

            $@(uniqueId)_currentUsage.text(`${data.usage_w} W`);
            $@(uniqueId)_currentGenerated.text(`${data.generated_w} W`);
            if (Number(data.usage_w) > Number(data.generated_w)) {
                $@(uniqueId)_currentDelta.text(`${data.usage_w - data.generated_w} W`);
                if (@(uniqueId)_initializing || !@(uniqueId)_currentlyReceiving) {
                    @(uniqueId)_currentlyReceiving = true;
                    $@(uniqueId)_headerDelta.removeClass('bg-success');
                    $@(uniqueId)_headerDelta.addClass('bg-danger');
                    $@(uniqueId)_deltaName.text('@_localizer[Resources.Views.Data._LiveDataPartial.Receiving]');
                }
            } else {
                $@(uniqueId)_currentDelta.text(`${data.generated_w - data.usage_w} W`);
                if (@(uniqueId)_initializing || @(uniqueId)_currentlyReceiving) {
                    @(uniqueId)_currentlyReceiving = false;
                    $@(uniqueId)_headerDelta.addClass('bg-success');
                    $@(uniqueId)_headerDelta.removeClass('bg-danger');
                    $@(uniqueId)_deltaName.text('@_localizer[Resources.Views.Data._LiveDataPartial.Delivering]');
                }
            }
            @(uniqueId)_initializing = false;
        }
    }
</script>
